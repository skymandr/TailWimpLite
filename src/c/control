/*  File: control.c
 *  Part of TailWimp Lite
 *  Copyright (C) 2021  Andreas Skyman (Bumbarrel Computing)
 * 
 *  Many features in this program are highly derivative of Steve Fryatt's
 *  examples from http://www.stevefryatt.org.uk/risc-os/wimp-prog which
 *  have been relicensed from European Union Public License v1.2 for the
 *  purpose of this program.
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include "oslib/osbyte.h"
#include "oslib/wimp.h"

#include "appwin.h"
#include "choices.h"
#include "control.h"
#include "manage.h"
#include "tailwimp.h"
#include "wininfo.h"


// Scan for keyboard input:
osbool control_scan_key(void) {
    osbool              modkey;
    direction           dir;
    wimp_w              handle;
    wimp_window_state   state;

    // Check if mod key is pressed:
    if (app_choices.modkey == choices_MOD_ALT) {
        modkey = osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_ALT, NULL)
                 || osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_LEFT_ALT, NULL)
                 || osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_RIGHT_ALT, NULL);
    } else {
        modkey = osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_LEFT_LOGO, NULL)
                 || osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_RIGHT_LOGO, NULL);
    }
    if (!modkey) {
        return FALSE;
    }

    // Check if movement key is pressed:
    if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_LEFT, NULL)) {
        dir = manage_LEFT;
    } else if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_RIGHT, NULL)) {
        dir = manage_RIGHT;
    } else if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_UP, NULL)) {
        dir = manage_TOP;
    } else if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_DOWN, NULL)) {
        dir = manage_BOTTOM;
    } else if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_SPACE, NULL)) {
        dir = manage_CENTRE;
    } else if (osbyte1(osbyte_SCAN_KEYBOARD, control_KEY_RETURN, NULL)) {
        dir = manage_MAX;
    } else {
        return FALSE;
    }

    // Find window to manage:
    handle = wininfo_get_active_window();
    if (handle == wimp_BOTTOM) {
        return FALSE;
    }

    // Manage window:
    state.w = handle;
    wimp_get_window_state(&state);
    manage_window(handle, dir);

    return TRUE;
}
