/*  File: keyboard.c
 *  Part of TailWimp Lite
 *  Copyright (C) 2021  Andreas Skyman (Bumbarrel Computing)
 * 
 *  Many features in this program are highly derivative of Steve Fryatt's
 *  examples from http://www.stevefryatt.org.uk/risc-os/wimp-prog which
 *  have been relicensed from European Union Public License v1.2 for the
 *  purpose of this program.
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include "oslib/wimp.h"

#include "appwin.h"
#include "manage.h"
#include "report.h"


// Process keyboard input:
void keyboard_process_key(wimp_key_no c) {
    const wimp_key_no mod_key = wimp_KEY_CONTROL | wimp_KEY_SHIFT;
    direction   dir;

    // TODO: This is mostly placeholders:
    wimp_window_state state;
    wimp_w handle;
    handle = appwin_get_handle();
    state.w = handle;
    wimp_get_window_state(&state);
    state.next = wimp_TOP;

    // Use if rather than switch to allow for mod_key setting in future:
    if (c == mod_key | wimp_KEY_LEFT) {
        dir = manage_LEFT;
    } else if (c == mod_key | wimp_KEY_RIGHT) {
        dir = manage_RIGHT;
    } else if (c == mod_key | wimp_KEY_UP) {
        dir = manage_TOP;
    } else if (c == mod_key | wimp_KEY_DOWN) {
        dir = manage_CENTRE;
    } else {
        wimp_process_key(c);
        return;
    }
    
    manage_window(&state, manage_LEFT);
    wimp_open_window((wimp_open*) &state);
};
