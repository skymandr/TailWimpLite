/*  File: choices.c
 *  Part of TailWimp Lite
 *  Copyright (C) 2021  Andreas Skyman (Bumbarrel Computing)
 * 
 *  Many features in this program are highly derivative of Steve Fryatt's
 *  examples from http://www.stevefryatt.org.uk/risc-os/wimp-prog which
 *  have been relicensed from European Union Public License v1.2 for the
 *  purpose of this program.
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include "oslib/wimp.h"

#include "choices.h"
#include "screen.h"
#include "sfconfig.h"
#include "tailwimp.h"


// Get choices:
void choices_get(choices* choices, screen_padding* padding) {
    choices->mod_key    = config_int_read("modkey");
    choices->padding    = padding;
    padding->left       = config_int_read("pad_left");
    padding->right      = config_int_read("pad_right");
    padding->top        = config_int_read("pad_top");
    padding->bottom     = config_int_read("pad_bottom");
}


// Initialise choices:
osbool choices_init(void) {
    if (!config_initialise(APP_TITLE, APP_CHOICES, APP_DIR)) {
        return FALSE;
    }

    config_int_init("modkey",       CHOICES_MODKEY);
    config_int_init("pad_left",     CHOICES_PAD_LEFT);
    config_int_init("pad_right",    CHOICES_PAD_RIGHT);
    config_int_init("pad_top",      CHOICES_PAD_RIGHT);
    config_int_init("pad_bottom",   CHOICES_PAD_BOTTOM);

    choices_load();

    return TRUE;
}


// Set default choices:
void choices_set_defaults(void) {
    config_int_set("modkey",        CHOICES_MODKEY);
    config_int_set("pad_left",      CHOICES_PAD_LEFT);
    config_int_set("pad_right",     CHOICES_PAD_RIGHT);
    config_int_set("pad_top",       CHOICES_PAD_RIGHT);
    config_int_set("pad_bottom",    CHOICES_PAD_BOTTOM);
}


// Load choices from disk or default:
osbool choices_load(void) {
    if (!config_load()) {
        choices_set_defaults();
        return FALSE;
    }
    return TRUE;
}


// Write choices to disk:
osbool choices_save(void) {
    return config_save();
}
