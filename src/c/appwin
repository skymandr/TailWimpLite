/*  File: appwin.c
 *  Part of TailWimp Lite
 *  Copyright (C) 2021  Andreas Skyman (Bumbarrel Computing)
 * 
 *  Many features in this program are highly derivative of Steve Fryatt's
 *  examples from http://www.stevefryatt.org.uk/risc-os/wimp-prog which
 *  have been relicensed from European Union Public License v1.2 for the
 *  purpose of this program.
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <string.h>

#include "oslib/wimp.h"
#include "oslib/wimpspriteop.h"

#include "manage.h"
#include "tailwimp.h"
#include "appwin.h"


// Global variables
static wimp_w appwin_handle;
#define APPWIN_TITLE_TEXT_LEN 14
static char appwin_title_text[APPWIN_TITLE_TEXT_LEN];


// Function prototypes:
static wimp_i appwin_create_icon(void);


// For debugging:
wimp_w appwin_get_handle(void) {
    return appwin_handle;
}


// Application window initialisation:
void appwin_initialise(void) {
    wimp_window window_definition;

    window_definition.visible.x0 =   0;
    window_definition.visible.x1 = 320;
    window_definition.visible.y0 =   0;
    window_definition.visible.y1 = 320;
    window_definition.xscroll = 0;
    window_definition.yscroll = 0;
    window_definition.next = wimp_TOP;
    window_definition.flags = wimp_WINDOW_NEW_FORMAT
                              | wimp_WINDOW_MOVEABLE
                              | wimp_WINDOW_AUTO_REDRAW
                              | wimp_WINDOW_BOUNDED_ONCE
                              | wimp_WINDOW_BACK_ICON
                              | wimp_WINDOW_CLOSE_ICON
                              | wimp_WINDOW_TITLE_ICON
                              | wimp_WINDOW_TOGGLE_ICON
                              | wimp_WINDOW_VSCROLL
                              | wimp_WINDOW_SIZE_ICON
                              | wimp_WINDOW_HSCROLL
                              | wimp_WINDOW_NO_BOUNDS
                              | wimp_WINDOW_HOT_KEYS;
    window_definition.title_fg = wimp_COLOUR_BLACK;
    window_definition.title_bg = wimp_COLOUR_LIGHT_GREY;
    window_definition.work_fg = wimp_COLOUR_BLACK;
    window_definition.work_bg = wimp_COLOUR_CREAM;
    window_definition.scroll_outer = wimp_COLOUR_MID_LIGHT_GREY;
    window_definition.scroll_inner = wimp_COLOUR_VERY_LIGHT_GREY;
    window_definition.highlight_bg = wimp_COLOUR_CREAM;
    window_definition.extra_flags = 0;
    window_definition.extent.x0 =     0;
    window_definition.extent.x1 =  1000;
    window_definition.extent.y0 = -1000;
    window_definition.extent.y1 =     0;
    window_definition.title_flags = wimp_ICON_TEXT
                                    | wimp_ICON_BORDER 
                                    | wimp_ICON_HCENTRED
                                    | wimp_ICON_VCENTRED
                                    | wimp_ICON_FILLED
                                    | wimp_ICON_INDIRECTED;
    window_definition.title_data.indirected_text.text = appwin_title_text;
    window_definition.title_data.indirected_text.size = APPWIN_TITLE_TEXT_LEN;
    window_definition.title_data.indirected_text.validation = "";
    window_definition.work_flags = wimp_BUTTON_NEVER
                                   << wimp_ICON_BUTTON_TYPE_SHIFT;
    window_definition.sprite_area = wimpspriteop_AREA;
    window_definition.xmin = 0;
    window_definition.ymin = 0;
    window_definition.icon_count = 0;

    strncpy(appwin_title_text, APP_TITLE, APPWIN_TITLE_TEXT_LEN);
    appwin_title_text[APPWIN_TITLE_TEXT_LEN - 1] = '\0';

    appwin_handle = wimp_create_window(&window_definition);
    appwin_create_icon();
}


// Open the main application window:
void appwin_open(void) {
    wimp_window_state state;

    // Get window state:
    state.w = appwin_handle;
    wimp_get_window_state(&state);

    // Set window position:
    if (!(state.flags & wimp_WINDOW_OPEN)) {
        manage_window(&state, manage_CENTRE);
    }
    state.next = wimp_TOP;

    // Open window:
    wimp_open_window((wimp_open*) &state);
}


// Create icon in main application window:
static wimp_i appwin_create_icon(void) {
    wimp_icon_create icon_definition;

    icon_definition.w = appwin_handle;
    icon_definition.icon.extent.x0 =   60;
    icon_definition.icon.extent.x1 =  260;
    icon_definition.icon.extent.y0 = -260;
    icon_definition.icon.extent.y1 =  -60;
    icon_definition.icon.flags = wimp_ICON_SPRITE
                                | wimp_ICON_HCENTRED
                                | (wimp_COLOUR_BLACK
                                   << wimp_ICON_FG_COLOUR_SHIFT)
                                | (wimp_COLOUR_CREAM
                                   << wimp_ICON_BG_COLOUR_SHIFT);
    strncpy(
        icon_definition.icon.data.sprite,
        "bumbarrelbbl",
        osspriteop_NAME_LIMIT
    );

    return wimp_create_icon(&icon_definition);
}
